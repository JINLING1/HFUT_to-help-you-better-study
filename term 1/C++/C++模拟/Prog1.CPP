/*-------------------------------------------------------
【程序填空】
---------------------------------------------------------

题目：辗转相除法求正整数的最大公约数，其算法思想是：不断
      检测除数和被除数能否整除，如果能整除则除数即是最大
      公约数，否则就更新被除数为除数，除数为上次的余数。
      下面两个函数的算法思想相近，请填空实现求最大公约数。
      并在主函数中输入数据，调用函数验证功能。
-------------------------------------------------------*/
#include <iostream>
using namespace std;

int gcd(int m, int n)
{//求m,n的最大公因数,要求m,n为正整数
/***********SPACE***********/
    if (【?】) {//调整m,n的值，要求m>n
        int t = m; m = n; n = t;
    }
    int r = 1;
/***********SPACE***********/
    while (【?】) {//判断n对m是否能够整除，并取得余数
        m = n;
        n = r;
    }
    return n;
}
int _gcd(int m, int n)
{//求m,n的最大公因数,m,n为正整数且m>n
    int Q = m;
    int R = n;
    while (Q!=R) {//Q,R是否相等
        if (Q > R){
/***********SPACE***********/
            【?】;
                }
        else{
/***********SPACE***********/
                【?】;
        }   
    }
/***********SPACE***********/
    return  【?】;
}

int main(void){
        int m, n, c;
        cin >> m >> n;
        c = gcd(m, n);
        cout << "gcd的到的公约数是：" << c << endl;
        c = _gcd(m, n);
        cout <<  "_gcd的到的公约数是：" << c << endl;
        
        return 0;
}
